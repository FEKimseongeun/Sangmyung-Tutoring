버스 요금은 RFID를 통해 결제된다.
단말기에 교통카드를 태그하면, 카드에 저장된 정보를 읽어와서 인증하고 결제하게 된다.
양방향 통신도 가능해서 단말기가 보내는 정보를 읽고, 처리하여 내부메모리에 저장하기도 한다.
일정 시간마다 단말기는 서버와 결제데이터도 전송하고, 교통 정보를 갱신한다.
시험문제에서는 실제 요금계산을 단순화하였다.
승객이 탑승하면 교통정보를 읽어, 요금을 계산하고,
잔액을 차감하고, 환승수, 이동거리 등 교통정보를 갱신하게 된다.

클래스는 1개, 멤버변수와 멤버함수는 합리적으로 설계한다.
아래 제시한 함수의 시그니쳐는 제시한 대로 지키며, 필요에 따라 추가할 수 있다.

(1-1) 버스 승객을 입력하고 출력
void getInput(String p) 함수를 구현한다.
교통정보를 Scanner로 읽어서 생성한다.
키보드에서 받아오면 상호작용에 시간이 걸리므로, 아래 문자열로 읽도록 한다.
그 안에 포함된 승객타입, 환승, 이동거리는 적절한 타입으로 인식한다
(데이터 타입을 적절히 인식하지 못하면 10점 감점)
데이터는 일련번호, 승객타입, 환승횟수, 이동거리 (km)이며, 대소문자가 섞여있다.
   "0 Adult 0 12.5km",
   "1 youth 0 9.0km",
   "2 Child 0 9.0km",
   "3 Transfer 1 13.0km",
   "4 child 0 14.2km",
   "5 Transfer 4 55.5km",
   "6 adult 0 18.0km",
   "7 youth 0 11.2km",
   "8 transfer 3 20.0km",
   "9 transfer 4 56.0km",
   "10 transfer 2 32.3km"

입력을 하고 다음과 같은 출력을 한다.
대소문자, 소수점 2자리, km를 올바르게 맞춘다.
... boarding 0 ADULT transfer 0 for 12.50km
... boarding 1 YOUTH transfer 0 for 9.00km
... boarding 2 CHILD transfer 0 for 9.00km
... boarding 3 TRANSFER transfer 1 for 13.00km
... boarding 4 CHILD transfer 0 for 14.20km
... boarding 5 TRANSFER transfer 4 for 55.50km
... boarding 6 ADULT transfer 0 for 18.00km
... boarding 7 YOUTH transfer 0 for 11.20km
... boarding 8 TRANSFER transfer 3 for 20.00km
... boarding 9 TRANSFER transfer 4 for 56.00km
... boarding 10 TRANSFER transfer 2 for 32.30km

필요에 의하여 enum을 사용해야된다.

(1-2) 버스 요금을 계산하여 출력한다.
버스 요금은 int computeFare(int seq, String type, int nTransfer, float distanceTraveled) 함수를 구현하여 계산한다.
교통카드 기본 요금은:
- 일반 1200
- 청소년 720
- 어린이 450원이다.
환승 요금은:
- 1회 요금은 이미 계산된 것으로 한다. 예를 들어, 첫 승차에 기본 요금이 발생하고, 환승하면 거리에 따라 정산된다.
- 10km까지 기본요금, 5km마다 100원 추가 요금제로 계산한다.
- 환승은 4회까지 적용한다. (5회는 정상요금을 결제하고, 그 후 시스템에서 환승횟수 및 거리를 0으로 설정한다고 가정)

요금 계산 후 출력하기 위해 void printPassenger() 함수를 구현한다.
출력양식은 아래와 같이 맞춘다.
- 표 컬럼명을 출력하고,
- 띄어쓰기 맞추고,
- 오른쪽 정렬을 맞추고,
- 요금은 컴마분리하고,
- 합계는 표 아래에 출력한다.
```
 seq     type    n transfer distance travelled    fare

----- ---------- ---------- ------------------ ---------

    0      ADULT          0          12.50 km  1,200 won

    1      YOUTH          0           9.00 km    720 won

    2      CHILD          0           9.00 km    450 won

    3   TRANSFER          1          13.00 km      0 won

    4      CHILD          0          14.20 km    450 won

    5   TRANSFER          4          55.50 km    900 won

    6      ADULT          0          18.00 km  1,200 won

    7      YOUTH          0          11.20 km    720 won

    8   TRANSFER          3          20.00 km    200 won

    9   TRANSFER          4          56.00 km    900 won

   10   TRANSFER          2          32.30 km    400 won

--------------------------------------------------------

                                               7,140 won

```



(1-3) 승객타입에 따라 총액을 계산하고 출력

승객타입을 입력받아서 출력하는 void printBy(FareType ft) 함수를 구현한다.



성인타입을 출력한다.

```

 seq     type    n transfer distance travelled    fare

----- ---------- ---------- ------------------ ---------

    0      ADULT          0          12.50 km  1,200 won

    6      ADULT          0          18.00 km  1,200 won

--------------------------------------------------------

                                               2,400 won

```



환승타입을 출력한다.

```

 seq     type    n transfer distance travelled    fare

----- ---------- ---------- ------------------ ---------

    3   TRANSFER          1          13.00 km      0 won

    5   TRANSFER          4          55.50 km    900 won

    8   TRANSFER          3          20.00 km    200 won

    9   TRANSFER          4          56.00 km    900 won

   10   TRANSFER          2          32.30 km    400 won

--------------------------------------------------------

                                               2,400 won


인스턴스 변수-> 고유의 저장공간(메모리)이 있어요.
클래스변수 -> 일반적인 변수

범위크기 : 클래스변수 > 인스턴스 변수

하나의 참조변수 값을 변경해도 모든 인스턴스의 값이 변하는겁니다.

인스턴스 메서드
-> 인스턴스 메서드가 인스턴스 멤버변수에 접근
-> 인스턴스 메서드가 클래스 멤버에 접근


오버로딩
메서드의 이름이 중복 되더라도 매개변수의 형태가 다르면 적용이 된다.
생성자도 이거다.

0 Adult 0 12.5km
1 youth 0 9.0km
2 Child 0 9.0km
3 Transfer 1 13.0km
4 child 0 14.2km
5 Transfer 4 55.5km
6 adult 0 18.0km
7 youth 0 11.2km
8 transfer 3 20.0km
9 transfer 4 56.0km
10 transfer 2 32.3km